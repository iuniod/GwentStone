Starting audit...
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/minion/Minion.java:20:23: Name 'RowPermission' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/minion/Minion.java:22:3: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getRowPermission' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getRowPermission' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/Environment.java:13:42: Name 'environmentCards' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/Environment.java:19:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/Implementation.java:9:31: Using the '.*' form of import should be avoided - implementation.commands.*. [AvoidStarImport]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/Implementation.java:10:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetPlayerMana.java:14:3: Class 'GetPlayerMana' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerMana' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetPlayerOneWins.java:14:3: Class 'GetPlayerOneWins' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerOneWins' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:20:3: Class 'PlaceCard' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaceCard' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:21:19: Parameter game should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:21:40: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:21:67: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:37:30: '5' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:41: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetPlayerTwoWins.java:14:3: Class 'GetPlayerTwoWins' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerTwoWins' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/EndPlayerTurn.java:5:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/EndPlayerTurn.java:7:8: Unused import - implementation.GameSimulation.Player. [UnusedImports]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/EndPlayerTurn.java:37:30: '10' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetTotalGamesPlayed.java:14:3: Class 'GetTotalGamesPlayed' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetTotalGamesPlayed' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/Command.java:55:3: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setErrorMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setErrorMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/Command.java:68:3: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardsInHand.java:17:3: Class 'GetCardsInHand' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetCardsInHand' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardsInHand.java:18:19: Parameter game should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardsInHand.java:18:40: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardsInHand.java:18:67: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardsOnTable.java:17:3: Class 'GetCardsOnTable' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetCardsOnTable' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/GameSimulation.java:6:8: Unused import - implementation.cards.Cards. [UnusedImports]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/GameSimulation.java:45:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/GameSimulation.java:57:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/GameSimulation.java:73:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:8:33: Using the '.*' form of import should be avoided - implementation.cards.hero.*. [AvoidStarImport]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:9:35: Using the '.*' form of import should be avoided - implementation.cards.minion.*. [AvoidStarImport]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:139:3: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addCardToHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addCardToHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:139:3: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 34 errors.
