Starting audit...
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/minion/Minion.java:20:23: Name 'RowPermission' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/minion/Minion.java:22:3: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getRowPermission' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getRowPermission' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/HeartHound.java:21:22: Parameter cards should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/HeartHound.java:21:46: Parameter opponentCards should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/HeartHound.java:34:26: '5' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/Winterfell.java:20:22: Parameter cards should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/Winterfell.java:20:46: Parameter opponentCards should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/Firestorm.java:20:22: Parameter cards should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/Firestorm.java:20:46: Parameter opponentCards should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/Environment.java:13:42: Name 'environmentCards' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/environment/Environment.java:19:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/Cards.java:174:3: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'getHasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'getHasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/Cards.java:178:3: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'setAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'setAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/Cards.java:178:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/Cards.java:182:3: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'resetHasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'resetHasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/cards/Cards.java:182:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/Implementation.java:9:31: Using the '.*' form of import should be avoided - implementation.commands.*. [AvoidStarImport]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/Implementation.java:10:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetPlayerMana.java:14:3: Class 'GetPlayerMana' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerMana' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetPlayerOneWins.java:14:3: Class 'GetPlayerOneWins' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerOneWins' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:12:8: Unused import - java.util.List. [UnusedImports]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:21:3: Class 'PlaceCard' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaceCard' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:22:19: Parameter game should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:22:40: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:22:67: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:39:27: '3' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/PlaceCard.java:44:30: '5' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetPlayerTwoWins.java:14:3: Class 'GetPlayerTwoWins' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetPlayerTwoWins' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/EndPlayerTurn.java:5:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/EndPlayerTurn.java:7:8: Unused import - implementation.GameSimulation.Player. [UnusedImports]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/EndPlayerTurn.java:10:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/EndPlayerTurn.java:11:8: Unused import - java.util.List. [UnusedImports]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/EndPlayerTurn.java:20:27: '4' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/EndPlayerTurn.java:45:30: '10' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardAtPosition.java:10:8: Unused import - java.util.List. [UnusedImports]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardAtPosition.java:18:3: Class 'GetCardAtPosition' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetCardAtPosition' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardAtPosition.java:19:19: Parameter game should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardAtPosition.java:19:40: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardAtPosition.java:19:67: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:15:29: Parameter command should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:15:45: Parameter index should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:15:56: Parameter player should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:19:3: Class 'UseEnvironmentCard' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UseEnvironmentCard' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:20:19: Parameter game should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:20:40: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:20:67: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:26:21: '3' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:34:12: '3' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:54: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/UseEnvironmentCard.java:54:108: '5' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/CardUsesAttack.java:12:42: Name 'tankCards' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/CardUsesAttack.java:21: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/CardUsesAttack.java:21:37: Parameter table should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/CardUsesAttack.java:21:72: Parameter cardName should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/CardUsesAttack.java:21:89: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/CardUsesAttack.java:45:3: Class 'CardUsesAttack' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CardUsesAttack' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/CardUsesAttack.java:46:19: Parameter game should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/CardUsesAttack.java:46:40: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/CardUsesAttack.java:46:67: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetTotalGamesPlayed.java:14:3: Class 'GetTotalGamesPlayed' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetTotalGamesPlayed' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/Command.java:30: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/Command.java:65:3: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setErrorMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setErrorMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/Command.java:78:3: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getIndex2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getIndex2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/Command.java:82:3: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getIndex3' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getIndex3' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/Command.java:86:3: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getIndex4' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getIndex4' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardsInHand.java:17:3: Class 'GetCardsInHand' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetCardsInHand' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardsInHand.java:18:19: Parameter game should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardsInHand.java:18:40: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardsInHand.java:18:67: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetCardsOnTable.java:18:3: Class 'GetCardsOnTable' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetCardsOnTable' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetEnvironmentCardsInHand.java:11:36: Parameter command should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetEnvironmentCardsInHand.java:11:52: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetEnvironmentCardsInHand.java:15:3: Class 'GetEnvironmentCardsInHand' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetEnvironmentCardsInHand' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetEnvironmentCardsInHand.java:16:19: Parameter game should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetEnvironmentCardsInHand.java:16:40: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetEnvironmentCardsInHand.java:16:67: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetFrozenCardsOnTable.java:10:32: Parameter command should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetFrozenCardsOnTable.java:14:3: Class 'GetFrozenCardsOnTable' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetFrozenCardsOnTable' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetFrozenCardsOnTable.java:15:19: Parameter game should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetFrozenCardsOnTable.java:15:40: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetFrozenCardsOnTable.java:15:67: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/commands/GetFrozenCardsOnTable.java:20:25: '4' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/GameSimulation.java:3:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/GameSimulation.java:14:31: Variable 'table' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/GameSimulation.java:25:25: '4' is a magic number. [MagicNumber]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/GameSimulation.java:50:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/GameSimulation.java:70:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:8:33: Using the '.*' form of import should be avoided - implementation.cards.hero.*. [AvoidStarImport]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:9:35: Using the '.*' form of import should be avoided - implementation.cards.minion.*. [AvoidStarImport]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:28: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:82:3: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:86:3: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:90:3: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayerMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayerMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:90:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:94:3: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerWins' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerWins' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:98:3: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayerWins' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayerWins' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:102:3: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addCardToHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addCardToHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/laburi_POO/tema/./src/implementation/GameSimulation/Player.java:102:3: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 98 errors.
